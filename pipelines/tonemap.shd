include "pipelines/common.glsl"

vertex_shader [[
	layout (location = 0) out vec2 v_uv;
	void main() {
		gl_Position = fullscreenQuad(gl_VertexID, v_uv);
	}
]]


fragment_shader [[
	float Uncharted2Tonemap(float x)
	{
		const float A = 0.15;
		const float B = 0.50;
		const float C = 0.10;
		const float D = 0.20;
		const float E = 0.02;
		const float F = 0.30;
		return ((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - E / F;
	}

	vec3 tonemap(vec3 in_color)
	{
		float midgray = 0.18;
		float avg_loglum = 0.3;
		float lum = luminance(in_color);
		float map_middle = (midgray / (avg_loglum + 0.001)) * lum;
		float ld = Uncharted2Tonemap(map_middle) / Uncharted2Tonemap(11.0);
		return (in_color / max(0.00001, lum)) * ld;
	}

	layout (binding=0) uniform sampler2D u_hdrbuffer;
	layout (location = 0) in vec2 v_uv;
	layout (location = 0) out vec4 o_color;
	void main() {
		const float exposure = 3;
		o_color.rgb = tonemap(texture(u_hdrbuffer, v_uv, 0).rgb * exposure);
		o_color.w = 1;
	}
]]